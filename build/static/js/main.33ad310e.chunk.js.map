{"version":3,"sources":["store/api/index.js","store/actions/stations-actions.js","store/selectors.js","store/action-types.js","components/tags-list.js","components/stations-list.js","pages/stations-list-page.js","components/audio-player.js","pages/station-details-page.js","components/spinner.js","app.js","store/reducers/stations-reducer.js","store/reducers/index.js","store/reducers/loading-reducer.js","store/reducers/error-reducer.js","store/index.js","index.js"],"names":["getStations","url","config","stationsUrl","fetch","then","response","ok","json","Error","statusText","data","actions","loadStations","dispatch","a","type","api","stations","payload","message","stationsListSelector","state","filterByTagId","all","filter","station","tags","find","tag","id","tagsListSelector","selectedTagId","className","map","key","path","name","to","src","imgUrl","width","height","alt","connect","ownProps","useState","document","createElement","audio","isPlaying","setIsPlaying","stop","pause","play","useEffect","onClick","stationId","useSelector","stationByIdSelector","streamUrl","description","role","isLoadingSelector","some","action","loading","errorMessageSelector","error","createErrorMessageSelector","mapDispatchToProps","isLoading","errorMessage","useLocation","pathname","substr","isHomePage","initialState","safeString","toLowerCase","replace","combineReducers","matches","exec","requestName","requestState","Array","from","Set","reduce","length","push","forEach","tagName","sort","b","middlewares","thunk","store","createStore","reducers","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.33ad310e.chunk.js","sourcesContent":["import config from '../../config.json';\n\nfunction fetchJson(url) {\n    return fetch(url)\n        .then((response) => {\n            if (response.ok) {\n                return response.json();\n            }\n            throw new Error(response.statusText);\n        })\n}\n\n// region Stations\n\nexport function getStations() {\n    return fetchJson(config.stationsUrl)\n        .then(response => response.data);\n}\n\n// endregion\n","import {\n    GET_STATIONS_FAILURE,\n    GET_STATIONS_REQUEST, GET_STATIONS_SUCCESS,\n} from '../action-types';\n\nimport * as api from '../api';\n\nexport const loadStations = () => async (dispatch) => {\n    dispatch({ type: GET_STATIONS_REQUEST });\n\n    let stations;\n    try {\n        stations = await api.getStations();\n    } catch (e) {\n        dispatch({ type: GET_STATIONS_FAILURE, payload: { message: `Error loading stations list` } });\n        return;\n    }\n\n    dispatch({ type: GET_STATIONS_SUCCESS, payload: { stations } });\n};\n","export const createLoadingSelector = (actions) => (state) => {\n    return actions\n        .some((action) => state.loading[action]);\n};\n\nexport const createErrorMessageSelector = (actions) => (state) => {\n    return actions\n        .map((action) => state.error[action])\n        .filter((action) => action)[0] || '';\n};\n\nexport const stationsListSelector = (state, filterByTagId) =>\n    filterByTagId\n        ? state.stations.all.filter((station) => station.tags.find((tag) => tag.id === filterByTagId))\n        : state.stations.all;\n\nexport const tagsListSelector = (state) => state.stations.tags;\n\nexport const stationByIdSelector = (state, stationId) => state.stations.all.find((station) => station.id === stationId);\n","export const GET_STATIONS_REQUEST = 'GET_STATIONS_REQUEST';\nexport const GET_STATIONS_SUCCESS = 'GET_STATIONS_SUCCESS';\nexport const GET_STATIONS_FAILURE = 'GET_STATIONS_FAILURE';\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function ({ tags, selectedTagId }) {\n    return (\n        <ul className=\"list-inline\">\n            {tags.map((tag) =>\n                <li key={tag.path} className=\"list-inline-item\">\n                    {tag.id === selectedTagId\n                        ? <b>{tag.name}</b>\n                        : <Link to={`/${tag.path}`}>{tag.name}</Link>\n                    }\n                </li>)}\n        </ul>\n    );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default ({ stations }) => {\n    return (\n        <ul className=\"list-unstyled d-flex flex-row flex-wrap\">\n            {stations.map((station) => (\n                <li key={station.id}\n                    className=\"text-center m-3\"\n                >\n                    <Link to={`/${station.path}`}>\n                        <div>\n                            <img src={station.imgUrl}\n                                 width=\"145\"\n                                 height=\"145\"\n                                 alt=\"\"/>\n                        </div>\n                        {station.name}\n                    </Link>\n                </li>\n            ))}\n        </ul>\n    );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n    tagsListSelector,\n    stationsListSelector,\n} from '../store/selectors';\n\nimport TagsList from '../components/tags-list';\nimport StationsList from '../components/stations-list';\n\nconst mapStateToProps = (state, ownProps) => ({\n    stations: stationsListSelector(state, ownProps.filterByTagId),\n    tags: tagsListSelector(state),\n});\n\nexport default connect(mapStateToProps)\n(({\n      filterByTagId,\n      tags,\n      stations,\n  }) => {\n\n    return (\n        <div className=\"container py-3\">\n            <TagsList tags={tags} selectedTagId={filterByTagId}/>\n            <StationsList stations={stations}/>\n        </div>\n    )\n});\n","import React, { useEffect, useState } from 'react';\n\nexport default function ({ url }) {\n    const [audio,] = useState(document.createElement('audio'));\n    const [isPlaying, setIsPlaying] = useState(false);\n\n    const stop = () => {\n        audio.pause();\n        audio.src = '';\n        setIsPlaying(false);\n    };\n\n    const play = () => {\n        audio.src = url;\n        audio.play();\n        setIsPlaying(true);\n    };\n\n    useEffect(() => {\n        if (isPlaying) {\n            play();\n        }\n\n        return () => stop();\n    }, [url]);\n\n    return (<div className=\"d-inline-block p-2 border\">\n        {isPlaying\n            ? <button type=\"button\" className=\"btn\" onClick={stop}>Stop</button>\n            : <button type=\"button\" className=\"btn\" onClick={play}>Play</button>}\n    </div>);\n}\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport { stationByIdSelector } from '../store/selectors';\nimport TagsList from '../components/tags-list';\nimport AudioPlayer from '../components/audio-player';\n\nexport default function ({ stationId }) {\n    const station = useSelector((state) => stationByIdSelector(state, stationId));\n    if (!station) {\n        return <Redirect to='/'/>\n    }\n\n    return (\n        <div className=\"container d-flex py-5\">\n            <div>\n                <img src={station.imgUrl}\n                     width=\"145\"\n                     height=\"145\"\n                     className=\"mb-2\"\n                     alt=\"\"/>\n                <div className=\"text-center\">\n                    <AudioPlayer url={station.streamUrl}/>\n                </div>\n            </div>\n            <div className=\"pl-3\">\n                <h2>{station.name}</h2>\n                <TagsList tags={station.tags}/>\n                <p>{station.description}</p>\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\n\nexport default () => (\n    <div className=\"d-flex flex-grow-1 justify-content-center align-items-center\">\n        <div className=\"spinner-border text-primary pl-1\" role=\"status\">Loading...</div>\n    </div>\n)\n\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n    Link,\n    Redirect,\n    useLocation,\n} from 'react-router-dom';\n\nimport { stations } from './store/actions';\nimport {\n    createErrorMessageSelector,\n    createLoadingSelector,\n    stationsListSelector,\n    tagsListSelector,\n} from './store/selectors';\n\nimport StationsListPage from './pages/stations-list-page';\nimport StationDetailsPage from './pages/station-details-page';\nimport Spinner from './components/spinner';\n\nconst isLoadingSelector = createLoadingSelector(['GET_STATIONS']);\nconst errorMessageSelector = createErrorMessageSelector(['GET_STATIONS']);\n\nconst mapStateToProps = (state) => ({\n    isLoading: isLoadingSelector(state),\n    errorMessage: errorMessageSelector(state),\n    stations: stationsListSelector(state),\n    tags: tagsListSelector(state),\n});\n\nconst mapDispatchToProps = {\n    loadStations: stations.loadStations\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)\n(function (\n    {\n        isLoading,\n        errorMessage,\n        stations,\n        tags,\n\n        loadStations,\n    }\n) {\n    useEffect(() => {\n        loadStations();\n    }, [loadStations]);\n\n    const { pathname } = useLocation();\n    const path = pathname.substr(1);\n\n    const isHomePage = path === '';\n    let station = false;\n    let tag = false;\n\n    if (!isHomePage) {\n        station = stations.find((station) => station.path === path);\n\n        if (!station) {\n            tag = tags.find((tag) => tag.path === path);\n        }\n    }\n\n    if (!isHomePage\n        && !station\n        && !tag) {\n        return <Redirect to=\"/\"/>;\n    }\n\n    return (\n        <div className=\"App d-flex flex-column h-100\">\n            <header>\n                <div className=\"container\">\n                    <h1>\n                        {isHomePage\n                            ? 'TuneIn Stations'\n                            : <Link to='/'> TuneIn Stations</Link>\n                        }\n                    </h1>\n                </div>\n            </header>\n\n            <div className=\"d-flex flex-grow-1 flex-column h-100\">\n                {isLoading\n                && <Spinner/>}\n\n                {errorMessage\n                && <div className=\"alert alert-danger\">{errorMessage}</div>}\n\n                {isHomePage && <StationsListPage/>}\n                {tag && <StationsListPage filterByTagId={tag.id}/>}\n\n                {station && <StationDetailsPage stationId={station.id}/>}\n            </div>\n\n            <footer>\n                <div className=\"container text-center\">\n                    &copy; 2020 *****\n                </div>\n            </footer>\n\n        </div>\n    );\n});\n","import {\n    GET_STATIONS_SUCCESS,\n} from '../action-types';\n\nconst initialState = {\n    all: [],\n    tags: [],\n};\n\nconst sortStationBy = 'popularity';\nconst safeString = (name) => name.toLowerCase()\n    .replace(/[^a-z0-9 ]/g, '')\n    .replace(/\\s+/g, '-');\n\nexport default (state = initialState, action) => {\n    const payload = action.payload || {};\n\n    switch (action.type) {\n        case GET_STATIONS_SUCCESS:\n            const { stations } = payload;\n\n            const tags = Array\n                .from(\n                    new Set(\n                        stations.reduce((tags, station) => {\n                            if (station.tags?.length) {\n                                tags.push(...station.tags);\n                            }\n                            return tags;\n                        }, [])\n                    )\n                )\n                .map((tag) => ({\n                    id: tag,\n                    path: safeString(tag),\n                    name: tag,\n                }));\n\n            stations.forEach((station) => {\n                station.path = safeString(`${station.name} ${station.id}`);\n                station.tags = station.tags.map((tagName) => tags.find((tag) => tag.name === tagName));\n            });\n\n            return {\n                ...state,\n                all: stations.sort((a, b) => b[sortStationBy] - a[sortStationBy]),\n                tags,\n            };\n\n        default:\n    }\n\n    return state;\n};\n","import { combineReducers } from 'redux'\n\nimport loadingReducer from './loading-reducer'\nimport errorReducer from './error-reducer'\n\nimport stationsReducer from './stations-reducer';\n\nexport default combineReducers({\n    loading: loadingReducer,\n    error: errorReducer,\n\n    stations: stationsReducer,\n});\n","export default (state = {}, action) => {\n  const { type } = action;\n  const matches = /(.*)_(REQUEST|SUCCESS|FAILURE)/.exec(type);\n\n  // not a *_REQUEST / *_SUCCESS /  *_FAILURE actions, so we ignore them\n  if (!matches) return state;\n\n  const [, requestName, requestState] = matches;\n  return {\n    ...state,\n    // Store whether a request is happening at the moment or not\n    // e.g. will be true when receiving GET_TODOS_REQUEST\n    //      and false when receiving GET_TODOS_SUCCESS / GET_TODOS_FAILURE\n    [requestName]: requestState === 'REQUEST',\n  };\n}\n","export default (state = {}, action) => {\n  const { type, payload } = action;\n  const matches = /(.*)_(REQUEST|FAILURE)/.exec(type);\n\n  // not a *_REQUEST / *_FAILURE actions, so we ignore them\n  if (!matches) return state;\n\n  const [, requestName, requestState] = matches;\n  return {\n    ...state,\n    // Store errorMessage\n    // e.g. stores errorMessage when receiving GET_TODOS_FAILURE\n    //      else clear errorMessage when receiving GET_TODOS_REQUEST\n    [requestName]: requestState === 'FAILURE' ? payload.message : '',\n  };\n};\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nimport reducers from './reducers';\n\nconst middlewares = [thunk];\n\nif (process.env.NODE_ENV === `development`) {\n    middlewares.push(logger);\n}\n\nconst store = createStore(reducers, {}, composeWithDevTools(applyMiddleware(...middlewares),));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.scss';\n\nimport App from './app';\nimport store from './store';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Router>\n                <App/>\n            </Router>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}